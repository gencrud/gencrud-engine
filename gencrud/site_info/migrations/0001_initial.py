# Generated by Django 2.2.10 on 2022-04-12 10:43

import ckeditor_uploader.fields
from django.db import migrations, models
import easy_thumbnails.fields
import gen.utils.url


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ListLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=125, verbose_name='Заголовок')),
                ('url', models.URLField(blank=True, db_index=True, max_length=255, null=True, verbose_name='URL страницы')),
                ('sort', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Порядок отображения')),
                ('is_show', models.BooleanField(default=True, verbose_name='Показать/Скрыть')),
                ('type_link', models.CharField(choices=[('L', 'ссылки'), ('T', 'тэги (окроет в новом окне)')], default=('L', 'ссылки'), help_text='\nСоздает CSS классы, в зависимости от выбраного типа. ``L_link``-ссылка или ``T_link``-тэг.<br>\nЕсли выбран тип ``ссылка`` - страница будет открываться в новой вкладке. <br>\nЕсли ``T_link`` страница будет открываться в новой вкладке!<br>\n', max_length=1, verbose_name='Вид ссылки')),
            ],
            options={
                'verbose_name': 'Быстрая ссылка',
                'verbose_name_plural': 'Быстрые ссылки',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название фото')),
                ('image_is_main', models.BooleanField(default=False, help_text='Главным может быть только одно фото', verbose_name='Главное')),
                ('image_description', models.TextField(blank=True, null=True, verbose_name='Краткое описание фото')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок')),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to=gen.utils.url.generate_path_year_month, verbose_name='Иконка')),
                ('html_link', models.CharField(blank=True, help_text='\nПримеры некоторых иконок соц.сетей:<br> \n`````````````````````````````````````````````````<br>\n``< i class="fa fa-facebook"> < /i>`` - facebook<br>\n``< i class="fa fa-twitter">< /i>`` - twitter<br>\n``< i class="fa fa-instagram">< /i>`` - instagram<br>\n``< i class="fa fa-google-plus">< /i>`` - google-plus<br>\n``< i class="fa fa-envelope">`` - envelope<br>\n', max_length=512, null=True, unique=True, verbose_name='НТМЛ-ссылка')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL страницы')),
            ],
            options={
                'verbose_name': 'Социальная сеть',
                'verbose_name_plural': 'Социальные сети',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
                'ordering': ('title',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TextInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=125, unique=True, verbose_name='Заголовок')),
                ('html', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Текст/HTML')),
            ],
            options={
                'verbose_name': 'Текстовая информация',
                'verbose_name_plural': 'Текстовая информация',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IncludeArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('is_show', models.BooleanField(default=True, verbose_name='Отображать')),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to=gen.utils.url.generate_path_year_month, verbose_name='Изображение')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('code', models.CharField(choices=[('advantages', 'Наши преимущества'), ('brands', 'Брэнды'), ('counter', 'Счетчик')], default='advantages', help_text="<i>\nПринцип работы:<br> \n<b>advantages</b> - кодовое название Включаемой облости.<br>\nI.  Проинициализировать кодовое слово в ``CHOICES``(<b>advantages</b>).<br>\nII. Создать HTML шаблон с кодовым словом ~/include_area/templates/<b>advantages</b>.html<br>\nIII. Чтобы отображать его в любом месте сайта - нужно в HTML страницы/шаблона прописать тэг:<br>\n<code><small>{% get_include_area request code='<b>advantages</b>' %}</small></code>\n</i>", max_length=20, verbose_name='Код')),
                ('sort', models.PositiveSmallIntegerField(default=1000, help_text='<br><i>\nЛучше использовать за единицу сортировки 1000 или 100.. \nТак проще будет разобраться, если элементы имеют большую вложенность.<br>\nИли придумайте свою систему сортировки : )\n<br>ПРИМЕР - 1000:__________________ПРИМЕР - 2000:\n<br>.... Пример - 1100__________________.... Пример - 2200\n<br>........... пример - 1110__________________........ пример - 2220\n<br>............... пример - 1111__________________............... пример - 2222</i>\n', verbose_name='Сортировка')),
                ('url', models.URLField(blank=True, help_text='<br><i>\n<code>http://google.com</code>\nЛюбая ссылка на веб страницу или веб-ресурс.</i>\n', null=True, verbose_name='Полный путь к веб-странице')),
            ],
            options={
                'verbose_name': 'Включаемую область',
                'verbose_name_plural': 'Включаемые области',
                'ordering': ('sort', 'code'),
                'abstract': False,
                'unique_together': {('title', 'code')},
            },
        ),
    ]
